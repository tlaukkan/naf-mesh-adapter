!function(e){var n={};function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)t.d(i,s,function(n){return e[n]}.bind(null,s));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=4)}([function(e,n,t){"use strict";function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}n.HandshakeRequest=function(){return function e(n,t){i(this,e),this.typeName="HandshakeRequest",this.email=n,this.secret=t}}(),n.HandshakeResponse=function(){return function e(n,t){i(this,e),this.typeName="HandshakeResponse",this.id=n,this.error=t}}(),n.Message=function(){return function e(n,t,s,o){i(this,e),this.typeName="Message",this.sourceId=n,this.targetId=t,this.contentType=s,this.contentJson=o}}()},function(e,n,t){"use strict";var i=t(0),s=i.HandshakeRequest,o=(i.HandshakeResponse,i.Message);n.SignalingClient=function(){return function e(n,t,i){var a=this;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e);var r=this;this.State={CONNECTING:"CONNECTING",CONNECTION_FAILED:"CONNECTION_FAILED",CONNECTED:"CONNECTED",DISCONNECTED:"DISCONNECTED"},this.id=null,this.email=t,this.state=r.State.DISCONNECTED,this.webSocket=null,this.send=function(e,n,t){if(r.state!=r.State.CONNECTED)throw new Error("signaling client send() called when in state is not connected: "+r.state);if(a.id){var i=JSON.stringify(t);r.webSocket.send(JSON.stringify(new o(a.id,e,n,i)))}},this.disconnect=function(){r.webSocket.close()},this.connect=function(){if(r.state!=r.State.DISCONNECTED&&r.state!=r.State.CONNECTION_FAILED)throw new Error("signaling client connect() called when in state is not disconnected or connection failed: "+r.state);r.state=r.State.CONNECTING,r.webSocket=new WebSocket(n,"webrtc-signaling")},this.onConnected=function(e){},this.onConnectFailed=function(e){},this.onConnectionError=function(){},this.onDisconnect=function(){},this.onReceive=function(e,n,t){},this.connect(),this.webSocket.onerror=function(e){a.id?(r.onConnectionError(e),r.disconnect()):(r.state=r.State.CONNECTION_FAILED,r.onConnectFailed(e))},this.webSocket.onclose=function(){r.state=r.State.DISCONNECTED,r.onDisconnect()},this.webSocket.onopen=function(){r.webSocket.send(JSON.stringify(new s(t,i)))},this.webSocket.onmessage=function(e){if("string"==typeof e.data){var n=JSON.parse(e.data);"HandshakeResponse"===n.typeName&&(n.id?(r.id=n.id,r.state=r.State.CONNECTED,r.onConnected(n.id)):(console.log("signaling client handshake failed: "+n.error),r.disconnect(),r.state=r.State.CONNECTION_FAILED)),"Message"===n.typeName&&r.onReceive(n.sourceId,n.contentType,JSON.parse(n.contentJson))}}}}()},function(e,n,t){"use strict";var i=t(1).SignalingClient;function s(e){return new Promise(function(n){return setTimeout(n,e)})}n.SignalingChannel=function(){return function e(){var n=this;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e);var t=this;this.ObjectType={OFFER:"OFFER",ANSWER:"ANSWER",ICE_CANDIDATE:"ICE_CANDIDATE"},this.clients=new Map,this.onServerConnectedCallbacks=new Map,this.connections=new Map,this.onOffer=function(e,n,t){throw new Error("onOffer has to be overridden with implementation of returning new RTCPeeringConnection(configuration).")},this.onServerConnected=function(e,n){},this.onServerConnectFailed=function(e,n){},this.onServerDisconnect=function(e){},this.onServerConnectionError=function(e){},this.close=function(){n.clients.forEach(function(e){e.disconnect()})},this.removeConnection=function(e){n.connections.forEach(function(t,i){t===e&&n.connections.delete(i)})},this.removeServer=function(e){t.clients.has(e)&&((t.clients.get(e).state=t.clients.get(e).State.CONNECTED)&&t.clients.get(e).disconnect(),t.clients.delete(e)),t.onServerConnectedCallbacks.has(e)&&t.onServerConnectedCallbacks.delete(e),t.connections.forEach(function(n,i){i.startsWith(e)&&t.connections.delete(i)})},this.addServer=function(e,n,s,o,a){o&&t.onServerConnectedCallbacks.set(e,o);var r=new i(e,n,s);t.clients.set(e,r),r.onConnected=function(n){if(t.onServerConnected(e,n),t.onServerConnectedCallbacks.has(e)){var i=t.onServerConnectedCallbacks.get(e);i&&i(e,n),t.onServerConnectedCallbacks.delete(e)}},r.onConnectFailed=function(n){console.log("Connect failed."),a&&a(n),t.onServerConnectFailed(n,e)},r.onReceive=async function(n,i,s){try{if(i===t.ObjectType.OFFER){var o=t.onOffer(e,n,s);t.connections.set(e+"/"+r.id+"-"+n,o),o.onicecandidate=async function(e){r.send(n,t.ObjectType.ICE_CANDIDATE,e.candidate)},await o.setRemoteDescription(s),await o.setLocalDescription(await o.createAnswer()),r.send(n,t.ObjectType.ANSWER,o.localDescription)}if(i===t.ObjectType.ANSWER){var a=t.connections.get(e+"/"+r.id+"-"+n);await a.setRemoteDescription(s)}i===t.ObjectType.ICE_CANDIDATE&&s&&t.connections.get(e+"/"+r.id+"-"+n).addIceCandidate(s)}catch(e){throw console.log("rtc peer error processing received object "+i+" "+JSON.stringify(s)+":"+e.message),new Error("rtc peer error processing received object "+i+" "+JSON.stringify(s)+":"+e.messag)}},r.onDisconnect=function(){t.onServerDisconnect(e),setTimeout(function(){r.connect()},1e4)},r.onConnectionError=function(){t.onServerConnectionError(e)}},this.offer=async function(e,n,i){try{var s=t.clients.get(e);await t.waitForClientToConnect(s),t.connections.set(e+"/"+s.id+"-"+n,i),i.onicecandidate=async function(e){s.send(n,t.ObjectType.ICE_CANDIDATE,e.candidate)},i.createOffer().then(async function(e){try{await i.setLocalDescription(e),s.send(n,t.ObjectType.OFFER,i.localDescription)}catch(e){console.log(e.message)}})}catch(e){throw console.log("rtc peer error sending offer: "+e.message),new Error("rtc peer error sending offer: "+e.message)}},this.waitForClientToConnect=async function(e){if(!e)throw new Error("Not connected to signaling server.");for(var n=0;e.state!==e.State.CONNECTED;)if(await s(100),++n>50)throw console.log("Waiting for client to connect timed out: "+signalingServerUrl),new Error("Waiting for client to connect timed out: "+signalingServerUrl)}}}()},function(e,n,t){"use strict";var i=function(){return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,n){var t=[],i=!0,s=!1,o=void 0;try{for(var a,r=e[Symbol.iterator]();!(i=(a=r.next()).done)&&(t.push(a.value),!n||t.length!==n);i=!0);}catch(e){s=!0,o=e}finally{try{!i&&r.return&&r.return()}finally{if(s)throw o}}return t}(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),s=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}();function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var a=t(2).SignalingChannel,r=function e(n){o(this,e);var t=n.lastIndexOf("/");this.peerUrl=n,this.signalingServerUrl=n.substr(0,t),this.peerId=n.substr(t+1)},c=function e(n,t){o(this,e),this.dataType=n,this.data=t},l=function(){function e(){o(this,e),this.debugLog("--- mesh adapter constructor ---"),this.debugLogPrefix=null,this.email=Date.now().toString(),this.secret=Date.now().toString(),"undefined"!=typeof document&&(this.debugLogPrefix=document.title,this.email=document.title,this.secret=document.title),this.selfPeerUrl=null,this.initialPeerUrl=null,this.configuration={iceServers:[{urls:"stun:stun1.l.google.com:19302"}]},this.signalingServerUrl="wss://tlaukkan-webrtc-signaling.herokuapp.com",this.room="default",this.signalingChannelOne=new a,this.selfPeerIds=new Map,this.connections=new Map,this.channels=new Map,this.peers=new Map,this.debugLog("--- mesh adapter constructor ---")}return s(e,[{key:"debugLog",value:function(e){this.debugLogPrefix&&console.log(this.debugLogPrefix+" "+e)}},{key:"setServerUrl",value:function(e){this.debugLog("--- mesh adapter set server url ---"),this.debugLog("set server URL to first peer URL to: "+e),e&&(this.initialPeerUrl=e),this.debugLog("--- mesh adapter set server url ---")}},{key:"setApp",value:function(e){this.debugLog("--- mesh adapter set app name ---"),this.app=e,this.debugLog("--- mesh adapter set app name ---")}},{key:"setRoom",value:function(e){this.debugLog("--- mesh adapter set app name ---"),this.room=e,this.debugLog("--- mesh adapter set app name ---")}},{key:"setWebRtcOptions",value:function(e){this.debugLog("--- mesh adapter set web rtc options ---"),this.debugLog("--- mesh adapter set web rtc options ---")}},{key:"setServerConnectListeners",value:function(e,n){this.debugLog("--- mesh adapter set server connect listener ---"),this.connectSuccess=e,this.connectFailure=n,this.debugLog("--- mesh adapter set server connect listener ---")}},{key:"setRoomOccupantListener",value:function(e){this.debugLog("--- mesh adapter set room occupant listener ---"),this.roomOccupantListener=e,this.debugLog("--- mesh adapter set room occupant listener ---")}},{key:"setDataChannelListeners",value:function(e,n,t){this.debugLog("--- mesh adapter set data channel listeners ---"),this.openListener=e,this.closedListener=n,this.messageListener=t,this.debugLog("--- mesh adapter set data channel listeners ---")}},{key:"connect",value:function(){var e=this,n=this;this.debugLog("--- mesh adapter connect ---"),this.signalingChannelOne.addServer(this.signalingServerUrl,this.email,this.secret,async function(t,i){n.selfPeerUrl=t+"/"+i,n.initialPeerUrl&&n.initialPeerUrl.length>3?(await n.offer(new r(n.initialPeerUrl),i),n.connectSuccess(n.selfPeerUrl)):(e.debugLog("mesh adapter did not send offer as initialPeerUrl was not set via setServerUrl function."),n.connectSuccess(n.selfPeerUrl))},function(){n.connectFailure()}),this.signalingChannelOne.onServerConnected=async function(t,i){n.selfPeerIds.set(t,i),e.debugLog("mesh adapter connected to signaling server "+t+"/"+i)},this.signalingChannelOne.onOffer=function(e,t,i){return n.acceptOffer(e,t,i)},this.debugLog("--- mesh adapter connect ---")}},{key:"disconnect",value:function(){self=this,this.channels.forEach(function(e,n){self.closeStreamConnection(n)}),this.signalingChannelOne.close()}},{key:"shouldStartConnectionTo",value:function(e){return this.debugLog("--- mesh adapter should start connection to ---"),this.debugLog("--- mesh adapter should start connection to ---"),!this.connections.has(e)}},{key:"startStreamConnection",value:function(e){var n=this;this.debugLog("--- mesh adapter start stream connection ---");var t=new r(e);if(n.selfPeerIds.has(t.signalingServerUrl)){var i=n.selfPeerIds.get(t.signalingServerUrl),s=t.signalingServerUrl+"/"+i;n.sendOffer(t,s)}else n.signalingChannelOne.addServer(t.signalingServerUrl,this.email,this.secret,async function(e,i){n.sendOffer(t,e+"/"+i)});this.debugLog("--- mesh adapter start stream connection ---")}},{key:"closeStreamConnection",value:function(e){if(this.debugLog("--- mesh adapter close stream connection ---"),this.channels.has(e)){var n=this.channels.get(e);n.close(),this.channels.delete(n),this.debugLog("mesh adapter removed channel"+e)}if(this.connections.has(e)){var t=this.connections.get(e);this.signalingChannelOne.removeConnection(t),t.close(),this.connections.delete(e),this.debugLog("mesh adapter removed connection"+e)}this.closedListener(e),this.debugLog("--- mesh adapter close stream connection ---")}},{key:"getConnectStatus",value:function(e){return this.debugLog("--- mesh adapter get connect status ---"),this.channels.has(e)?(this.debugLog("--- mesh adapter get connect status ---"),"IS_CONNECTED"):(this.debugLog("--- mesh adapter get connect status ---"),"NOT_CONNECTED")}},{key:"sendData",value:function(e,n,t){this.debugLog("--- mesh adapter send data ---"),this.channels.has(e)&&this.channels.get(e).send(JSON.stringify(new c(n,t))),this.debugLog("--- mesh adapter send data ---")}},{key:"sendDataGuaranteed",value:function(e,n,t){this.debugLog("--- mesh adapter send data guaranteed ---"),this.sendData(e,n,t),this.debugLog("--- mesh adapter send data guaranteed ---")}},{key:"broadcastData",value:function(e,n){this.debugLog("--- mesh adapter broadcast data ---"),this.channels.forEach(function(t){t.send(JSON.stringify(new c(e,n)))}),this.debugLog("--- mesh adapter broadcast data ---")}},{key:"broadcastDataGuaranteed",value:function(e,n){this.debugLog("--- mesh adapter broadcast data guaranteed ---"),this.broadcastData(e,n),this.debugLog("--- mesh adapter broadcast data guaranteed ---")}},{key:"offer",value:async function(e,n){var t=this,i=this.signalingServerUrl+"/"+n;this.signalingChannelOne.clients.has(e.signalingServerUrl)?await this.delayedSendOffer(e,i):this.signalingChannelOne.addServer(e.signalingServerUrl,this.email,this.secret,async function(n,s){await t.delayedSendOffer(e,i)})}},{key:"delayedSendOffer",value:async function(e,n){var t=this;"Sender"===t.debugLogPrefix?setTimeout(async function(){await t.sendOffer(e,n)},1e3):await t.sendOffer(e,n)}},{key:"sendOffer",value:async function(e,n){var t=n+" -> "+e.peerUrl,i=new RTCPeerConnection(this.configuration);this.connections.set(e.peerUrl,i);var s=e.peerUrl,o=i.createDataChannel(t);this.setupChannel(o,s),await this.signalingChannelOne.offer(e.signalingServerUrl,e.peerId,i),this.debugLog("mesh adapter sent offer to "+e.peerUrl)}},{key:"acceptOffer",value:function(e,n,t){var i=this,s=e+"/"+n,o=new RTCPeerConnection(this.configuration);return this.connections.set(s,o),this.debugLog("mesh adapter received offer from "+s),o.ondatachannel=function(e){var n=e.channel;i.setupChannel(n,s)},o}},{key:"setupChannel",value:function(e,n){var t=this;e.onopen=function(){t.channels.set(n,e),t.openListener(n),t.peers.set(n,!0),t.notifyOccupantsChanged(),t.debugLog("channel "+e.label+" opened")},e.onclose=function(){t.closeStreamConnection(n),t.peers.set(n,!1),t.notifyOccupantsChanged(),t.debugLog("channel "+e.label+" closed")},e.onmessage=function(i){t.debugLog("channel "+e.label+" received message "+i.data+" from "+n);var s=JSON.parse(i.data),o=n,a=s.dataType,r=s.data;t.messageListener(o,a,r)}}},{key:"notifyOccupantsChanged",value:function(){this.roomOccupantListener(Array.from(this.peers).reduce(function(e,n){var t=i(n,2),s=t[0],o=t[1];return Object.assign(e,function(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}({},s,o))},{}))}}]),e}();"undefined"!=typeof NAF&&NAF.adapters.register("mesh",l),n.MeshAdapter=l},function(e,n,t){"use strict";t(3).MeshAdapter}]);